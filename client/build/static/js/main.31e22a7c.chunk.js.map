{"version":3,"sources":["utils/mutations.js","utils/auth.js","components/signUpModal/SignUp.js","pages/LandingPage/Landing.js","utils/queries.js","components/addEmpModal/addEmpModal.js","components/employees/Employee.js","components/addSiteModal/AddSite.js","components/sites/Sites.js","components/addRosterModal/AddRoster.js","components/roster/Roster.js","pages/HomePage/Home.js","App.js","reportWebVitals.js","index.js"],"names":["LOGIN","gql","SIGNUP","ADD_EMP","ADD_SITE","ADD_ROSTER","DELETE_EMP","decode","this","getToken","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","SignUp","props","useState","empName","email","password","phone","isManager","signUpFormdata","setSignUpFormData","useMutation","signUp","error","data","handleSignChange","event","target","name","value","handleFormSubmit","a","console","log","preventDefault","variables","Auth","login","message","show","className","onClick","onClose","id","onSubmit","htmlFor","type","placeholder","onChange","Landing","setShow","loginFormdata","setLoginFormData","handleChange","QUERY_USER","QUERY_ROSTER","AddEmp","addEmpFormdata","setAddEmpFormData","addEmp","newEmployee","Employee","deleteEmp","handleDeleteEmp","e","emp","eployeeID","delData","employee","useQuery","loading","React","user","managedEmployees","map","_id","AddSite","siteName","siteLocation","company","siteContact","sitePhone","addSiteFormdata","setAddSiteFormData","addSite","newSite","Sites","managedSites","site","AddRoster","reload","addRoster","dayDate","employees","comments","addRosterFormdata","setAddRosterFormData","newRoster","Roster","userID","getProfile","rostersManager","rosters","roster","Home","setShowE","setShowR","setShowS","showComponent","compName","loggedIn","to","logout","errorLink","onError","graphQLErrors","networkError","httpLink","createHttpLink","uri","authLink","ApolloLink","from","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31e22a7c.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      employee {\n        _id\n        empName\n      }\n    }\n  }\n`;\n\nexport const SIGNUP = gql`\n  mutation signUp($empName: String!, $email: String!, $phone: String!, $password: String!, $isManager: Boolean!) {\n  signUp(empName: $empName, email: $email, phone: $phone, password: $password, isManager: $isManager) {\n    token\n    employee {\n      empName\n      email\n      phone\n      isManager\n    }\n  }\n}\n`;\n// password: String = \"1Deafault!\", isManager: Boolean = false\n\nexport const ADD_EMP= gql`\n  mutation newEmployee($empName: String!, $email: String!, $phone: String!, $password: String!, $isManager: Boolean!) {\n  newEmployee(empName: $empName, email: $email, phone: $phone, password: $password, isManager: $isManager) {\n    token\n    employee {\n      empName\n      email\n      phone\n      isManager\n    }\n  }\n}\n`;\n\nexport const ADD_SITE = gql`\nmutation newSite($siteName: String!, $siteLocation: String!, $company: String!, $siteContact: String!, $sitePhone: String!) {\n  newSite(siteName: $siteName, siteLocation: $siteLocation, company: $company, siteContact: $siteContact, sitePhone: $sitePhone) {\n    token\n    site {\n      _id\n      siteName\n      siteLocation\n      company\n      siteContact\n      sitePhone\n    }\n  }\n}\n`;\n\nexport const ADD_ROSTER = gql`\nmutation addRoster($dayDate: String!, $siteName: String!, $employees: [String!], $comments: String) {\n  addRoster(dayDate: $dayDate, siteName: $siteName, employees: $employees, comments: $comments) {\n    token\n    roster {\n      dayDate\n      siteName {\n        siteName\n      }\n      employees {\n        empName\n      }\n      comments\n    }\n  }\n}\n`;\n\nexport const DELETE_EMP= gql`\nmutation deleteEmployee($employeeID: String!) {\n  deleteEmployee( employeeID: $employeeID) {\n    token\n    employee {\n      _id\n      }\n  }\n}\n`;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    // If there is a token and it's not expired, return `true`\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n  \n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    //decode token\n    //if decodedtoke.data.ismanager === trie window location /home else window local /employee\n    window.location.assign('/home');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.assign('/')\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { SIGNUP } from \"../../utils/mutations\";\n\nimport Auth from \"../../utils/auth\";\nimport \"./signModal.css\";\n\nconst SignUp = (props) => {\n\n  // const [passwordData, setPasswordData] = useState({\n  //   pword:\"\",\n  //   confPword: \"\",\n  // })\n\n  const [signUpFormdata, setSignUpFormData] = useState({\n    empName: \"\",\n    email: \"\",\n    password: \"\",\n    phone: \"\",\n    isManager: true,\n  });\n\n  const [signUp, { error, data }] = useMutation(SIGNUP);\n\n  // const confirmPassword = (event) => {\n  //   const { name, value } = event.target;\n  //   setPasswordData({ ...passwordData, [name]: value })\n\n  //   if (passwordData.pword.value === passwordData.confPword.value) {\n  //     console.log(\"this is the password\", passwordData.pword.value)\n  //     setSignUpFormData({ ...signUpFormdata, password: passwordData.pword.value })\n      \n  //   } else {\n  //     window.alert(\"Passwords do not match\")\n  //   }\n\n  // }\n\n  const handleSignChange = (event) => {\n    const { name, value } = event.target;\n    setSignUpFormData({ ...signUpFormdata, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    console.log(\"start of handleformsubmit\", signUpFormdata)\n    event.preventDefault();\n    try {\n      const {  data: {\n        signUp: { token },\n      },} = await signUp({\n        variables: { ...signUpFormdata },\n      });\n      console.log(\"this is data\", data);\n\n      Auth.login(token);\n    } catch (e) {\n      console.log(\"there is an error with handleformsubmit\", e.message)\n      console.error(e);\n    }\n  };\n\n  if (!props.show) {\n    return null\n  }\n\n  return (\n    <div className=\"signUpModal\">\n      <div className=\"modalContent\">\n        <button className=\"modalClose\" onClick={props.onClose}>✖</button>\n        <h3 className=\"modalTitle\" id=\"signTitle\">\n          Sign Up\n        </h3>\n        {data ? (\n    <p>you have signed up </p>\n  ) : ( <div> \n        <form onSubmit={handleFormSubmit}>\n          <div className=\"signInputWrapper\">\n            <label htmlFor=\"empName\">Enter your Name</label>\n            <input\n              type=\"text\"\n              className=\"modalInput\"\n              name=\"empName\"\n              placeholder=\"First + last\"\n              value={signUpFormdata.empName}\n              onChange={handleSignChange}\n            />\n            <br />\n\n            <label htmlFor=\"email\">Enter your email</label>\n            <input\n              type=\"text\"\n              className=\"modalInput\"\n              name=\"email\"\n              placeholder=\"Email\"\n              value={signUpFormdata.email}\n              onChange={handleSignChange}\n            />\n\n            <label htmlFor=\"phone\">Enter your mobile</label>\n            <input\n              type=\"text\"\n              className=\"modalInput\"\n              id=\"phone\"\n              name=\"phone\"\n              placeholder=\"Mobile\"\n              value={signUpFormdata.phone}\n              onChange={handleSignChange}\n            />\n\n            <label htmlFor=\"pword\">Enter your password</label>\n            <input\n              type=\"text\"\n              className=\"modalInput\"\n              name=\"password\"\n              placeholder=\"Password\"\n              value={signUpFormdata.password}\n              onChange={handleSignChange}\n            />\n{/* \n            <label htmlFor=\"confPword\">Confirm your password</label>\n            <input\n              type=\"text\"\n              name=\"confPword\"\n              className=\"modalInput\"\n              placeholder=\"Confirm Password\"\n              value={passwordData.confPword}\n              onClick={confirmPassword} */}\n            {/* /> */}\n          </div>\n          <button type=\"submit\" className=\"modalSubmit\" id=\"signSubmit\">\n          Join SiteMate\n        </button>\n        </form>\n    \n\n\n      </div>\n        )}{error && (\n          <div className=\"my-3 p-3 bg-danger text-white\">\n            {error.message}\n          </div>\n        )}\n      </div>\n      <div className=\"bckBlur\" onClick={props.onClose}></div>\n    </div>\n);\n};\n\nexport default SignUp;\n","import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN } from \"../../utils/mutations\";\nimport \"./styles.css\";\nimport Auth from \"../../utils/auth\";\nimport SignUp from \"../../components/signUpModal/SignUp\";\n\n\nconst Landing = (props) => {\n  //handles signup modal\n  const [show, setShow] = useState(false)\n\n  const [loginFormdata, setLoginFormData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const [login, { error, data }] = useMutation(LOGIN);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setLoginFormData({ ...loginFormdata, [name]: value });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault()\n    console.log(\"this is data\", data);\n    console.log(\"this is form data\", loginFormdata)\n    try {\n      console.log(\"shoot me in the face\")\n      const { data } = await login({\n        variables: { ...loginFormdata },\n      });\n      console.log(\"this is data\", data);\n      console.log(data.login.token)\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n     // clear form values\n setLoginFormData({\n  email: \"\",\n  password: \"\",\n});\n  };\n\n   \n\n    return (\n      <div>\n        <div id=\"landingGridWrapper\">\n<h1 id=\"landingTitle\">\n  SiteMate\n  <span>\n    <i id=\"fas fa-hard-hat\"></i>\n  </span>\n</h1>\n<div id=\"loginWrap\">\n  <h3 id=\"loginTitle\">Login</h3>\n  {data ? (\n    <p>you are now logged in!    </p>\n  ) : (\n    <div>\n      <form id=\"logInputWrapper\" onSubmit={handleFormSubmit}>\n        <input\n          name=\"email\"\n          type=\"email\"\n          className=\"logInput\"\n          id=\"logEmail\"\n          placeholder=\"Email\"\n          value={loginFormdata.email}\n          onChange={handleChange}\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          className=\"logInput\"\n          id=\"logPassword\"\n          placeholder=\"Password\"\n          value={loginFormdata.password}\n          onChange={handleChange}\n        />\n        <button\n          className=\"loginBtn\"\n          type=\"submit\"\n          id=\"logSubit\"\n          onClick={handleChange}\n        >\n          Login\n        </button>\n      </form>\n      <div id=\"signUp\">\n        <h3 id=\"signText\">not a member?</h3>\n        <input\n          className=\"loginBtn\"\n          id=\"signUpSubmit\"\n          type=\"button\"\n          value=\"Sign Up\"\n          onClick={() => setShow(true)}\n                          />\n      </div>\n      <SignUp onClose={() => setShow(false)} show={show}/>\n    </div>\n  )}\n  {error && (\n    <div className=\"my-3 p-3 bg-danger text-white\">\n      {error.message}\n    </div>\n  )}\n</div>\n</div>\n      </div>\n    );\n};\n\n\nexport default Landing;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_EMPLOYEE = gql`\nquery employees {\n  employees {\n    _id\n    empName\n    email\n    phone\n    isManager\n  }\n}\n`;\nexport const QUERY_EMPBYID = gql`\nquery empbyID($employeeEmployeeId: ID!) {\n  employees {\n    _id\n    empName\n    email\n    phone\n    isManager\n  }\n  employee(employeeId: $employeeEmployeeId) {\n    empName\n    email\n    phone\n    isManager\n  }\n}\n`;\n\nexport const QUERY_USER = gql`\nquery User {\n  user {\n    _id\n    empName\n    managedSites {\n      _id\n      siteName\n      siteLocation\n      company\n      siteContact\n      sitePhone\n    }\n    managedEmployees {\n      _id\n      empName\n      email\n      phone\n    }\n  }\n}\n`;\n\nexport const QUERY_ROSTER = gql`\nquery rosters($rostersManager: String!){\n  rosters(manager: $rostersManager) {\n    _id\n    dayDate\n    siteName {\n      siteName\n    }\n    employees {\n      empName\n    }\n    comments\n  }\n}\n`;","import React, { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { ADD_EMP } from \"../../utils/mutations\";\r\nimport Auth from \"../../utils/auth\";\r\nimport \"./addEmp.css\"\r\n\r\nconst AddEmp = (props) => {\r\n\r\n  const [addEmpFormdata, setAddEmpFormData] = useState({\r\n    empName: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    password: \"1Deafault!\", \r\n    isManager: false\r\n  });\r\n\r\n  const [addEmp, { error, data }] = useMutation(ADD_EMP);\r\n  console.log(\"this is data from use mutation\", data)\r\n\r\n  const handleSignChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setAddEmpFormData({ ...addEmpFormdata, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    console.log(\"start of handleformsubmit\", addEmpFormdata)\r\n    event.preventDefault();\r\n    try {\r\n    \r\n      const {  data } = await addEmp({\r\n        variables: { ...addEmpFormdata },\r\n      });\r\n      console.log(\"this is data\", data);\r\n      Auth.getToken(data.newEmployee.token)\r\n      window.location.assign('/home')\r\n    } catch (e) {\r\n      console.log(\"there is an error with handleformsubmit\", e.message)\r\n      console.error(e);\r\n    }\r\n  };\r\n\r\n  if (!props.show) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"addEmpModal\">\r\n      <div className=\"modalContent\">\r\n        <button className=\"modalClose\" onClick={props.onClose}>✖</button>\r\n        <h3 className=\"modalTitle\" id=\"signTitle\">\r\n          Add Employee\r\n        </h3>\r\n        {data ? (\r\n    <p>Employee Added to database </p>\r\n  ) : ( <div> \r\n        <form onSubmit={handleFormSubmit}>\r\n          <div className=\"signInputWrapper\">\r\n            <label htmlFor=\"empName\">Enter your Name</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"modalInput\"\r\n              name=\"empName\"\r\n              placeholder=\"First + last\"\r\n              value={addEmpFormdata.empName}\r\n              onChange={handleSignChange}\r\n            />\r\n            <br />\r\n\r\n            <label htmlFor=\"email\">Enter your email</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"modalInput\"\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              value={addEmpFormdata.email}\r\n              onChange={handleSignChange}\r\n            />\r\n\r\n            <label htmlFor=\"phone\">Enter your mobile</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"modalInput\"\r\n              id=\"phone\"\r\n              name=\"phone\"\r\n              placeholder=\"Mobile\"\r\n              value={addEmpFormdata.phone}\r\n              onChange={handleSignChange}\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"modalSubmit\" id=\"signSubmit\">\r\n          Add New Employee\r\n        </button>\r\n    \r\n        </form>\r\n    \r\n\r\n\r\n      </div>\r\n        )}{error && (\r\n          <div className=\"my-3 p-3 bg-danger text-white\">\r\n            {error.message}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"bckBlur\"></div>\r\n    </div>\r\n);\r\n};\r\n\r\nexport default AddEmp;\r\n","import React, { useState } from \"react\";\r\nimport { empty, useQuery } from \"@apollo/client\";\r\nimport { QUERY_USER} from \"../../utils/queries\";\r\nimport \"./employeeStyles.css\";\r\nimport AddEmp from \"../addEmpModal/addEmpModal\";\r\nimport { DELETE_EMP  } from \"../../utils/mutations\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport Auth from \"../../utils/auth\";\r\n\r\nexport default function Employee() {\r\n\r\n  const [deleteEmp, delData, delError] = useMutation(DELETE_EMP)\r\n  let id = \"\"\r\n  const handleDeleteEmp = async (e) => {\r\n     console.log(\"this is id\", e.target)\r\n     const emp = e.target.value;\r\n     console.log(\"this is emp\", typeof emp)\r\n    try {\r\n    const { delData } = await deleteEmp({variables: {eployeeID: emp}})\r\n    //   // console.log(\"delete employee data\",data)\r\n      Auth.getToken(data.employee.token)\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const { loading, error, data } = useQuery(QUERY_USER);\r\n\r\n  const [show, setShow] = React.useState(false);\r\n\r\n  console.log(\"this is USE_QUERY\",data)\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    console.log(\"Error retrieving user data\", error.message);\r\n  }\r\n\r\n  if (!data.user) {\r\n    console.log(\"please kill me\", data.user);\r\n  } else if (data.user) {\r\n    const user = data.user;\r\n    return (\r\n      <>\r\n        <div className=\"employeeWrap\">\r\n          {user.managedEmployees.map((emp) => (\r\n            <section className=\"employeeCard\" key={emp._id}>\r\n              <h4>{emp.empName}</h4>\r\n              <h3> {emp.email} </h3>\r\n              <h4> {emp.phone} </h4>\r\n              <button type=\"submit\" value={emp._id} onClick={handleDeleteEmp}>Delete</button>\r\n            </section>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"addBtn\">\r\n          <button type=\"button\" onClick={() => setShow(true)}>Add Employee ➕ </button>\r\n          <AddEmp onClose={() => setShow(false)} show={show} />\r\n        </div>\r\n    </>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { ADD_SITE } from \"../../utils/mutations\";\r\nimport Auth from \"../../utils/auth\";\r\nimport \"./addSite.css\"\r\n\r\nconst AddSite = (props) => {\r\n\r\n  const [addSiteFormdata, setAddSiteFormData] = useState({\r\n    siteName: \"\",\r\n    siteLocation: \"\",\r\n    company: \"\",\r\n    siteContact: \"\",\r\n    sitePhone: \"\",\r\n  });\r\n\r\n  const [addSite, { error, data }] = useMutation(ADD_SITE);\r\n  console.log(\"this is data from use mutation\", data)\r\n\r\n  const handleSignChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setAddSiteFormData({ ...addSiteFormdata, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    console.log(\"start of handleformsubmit\", addSiteFormdata)\r\n    event.preventDefault();\r\n    try {\r\n      \r\n      const { data } = await addSite({\r\n        variables: { \r\n          siteName: addSiteFormdata.siteName,\r\n          siteLocation: addSiteFormdata.siteLocation,\r\n          company: addSiteFormdata.company,\r\n          siteContact: addSiteFormdata.siteContact,\r\n          sitePhone: addSiteFormdata.sitePhone,\r\n         }\r\n      });\r\n      console.log(\"this is data\", data);\r\n      //Change toke update\r\n      Auth.getToken(data.newSite.token)\r\n      window.location.assign('/home')\r\n    } catch (e) {\r\n      console.log(\"there is an error with handleformsubmit\", e.message)\r\n      console.error(e);\r\n    }\r\n  };\r\n\r\n  if (!props.show) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"addSiteModal\">\r\n      <div className=\"modalContent\">\r\n        <button className=\"modalClose\" onClick={props.onClose}>✖</button>\r\n        <h3 className=\"modalTitle\" id=\"signTitle\">\r\n          Add Employee\r\n        </h3>\r\n        {data ? (\r\n    <p>Employee Added to database </p>\r\n  ) : ( <div> \r\n        <form onSubmit={handleFormSubmit}>\r\n          <div className=\"signInputWrapper\">\r\n            <label htmlFor=\"siteName\">Enter Site Name</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"modalInput\"\r\n              name=\"siteName\"\r\n              placeholder=\"Site\"\r\n              value={addSiteFormdata.siteName}\r\n              onChange={handleSignChange}\r\n            />\r\n            <br />\r\n\r\n            <label htmlFor=\"siteLocation\">Enter Site Location</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"modalInput\"\r\n              name=\"siteLocation\"\r\n              placeholder=\"Address\"\r\n              value={addSiteFormdata.siteLocation}\r\n              onChange={handleSignChange}\r\n            />\r\n\r\n            <label htmlFor=\"company\">Enter Site Company</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"modalInput\"\r\n              id=\"company\"\r\n              name=\"company\"\r\n              placeholder=\"Company\"\r\n              value={addSiteFormdata.company}\r\n              onChange={handleSignChange}\r\n            />\r\n            \r\n\r\n            <label htmlFor=\"siteContact\">Enter Company Contact</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"modalInput\"\r\n              name=\"siteContact\"\r\n              placeholder=\"Site Contact\"\r\n              value={addSiteFormdata.siteContact}\r\n              onChange={handleSignChange}\r\n            />\r\n\r\n            <label htmlFor=\"sitePhone\">Enter Company Contact Phone</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"modalInput\"\r\n              name=\"sitePhone\"\r\n              placeholder=\"Contact Phone Number\"\r\n              value={addSiteFormdata.sitePhone}\r\n              onChange={handleSignChange}\r\n            />\r\n          </div>\r\n          \r\n\r\n          \r\n          <button type=\"submit\" className=\"modalSubmit\" id=\"signSubmit\">\r\n          Add New Site\r\n        </button>\r\n    \r\n        </form>\r\n    \r\n\r\n\r\n      </div>\r\n        )}{error && (\r\n          <div className=\"my-3 p-3 bg-danger text-white\">\r\n            {error.message}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"bckBlur\"></div>\r\n    </div>\r\n);\r\n};\r\n\r\nexport default AddSite;\r\n","import React, { useState }  from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { QUERY_USER } from \"../../utils/queries\";\r\nimport \"./siteStyles.css\";\r\nimport AddSite from \"../addSiteModal/AddSite\"\r\n\r\nexport default function Sites() {\r\n  const { loading, error, data } = useQuery(QUERY_USER);\r\n\r\n  const [show, setShow] = React.useState(false);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    console.log(\"Error retrieving user data\", error.message);\r\n  }\r\n\r\n  if (!data.user) {\r\n    console.log(\"please kill me\", data.user);\r\n  } else if (data.user) {\r\n    const user = data.user;\r\n\r\n    return (\r\n      <>\r\n      <div className=\"siteWrap\">\r\n        {user.managedSites.map((site) => (\r\n          <section className=\"siteCard\" key={site._id}>\r\n            <h1 className=\"cardTitle\"> {site.siteName} </h1>\r\n            <div className=\"siteInfo\">\r\n              <h4> Address: {site.siteLocation}</h4>\r\n              <h4> Company: {site.company} </h4>\r\n              <h4> Contact Name: {site.siteContact} </h4>\r\n              <h4> Mobile: {site.sitePhone} </h4>\r\n            </div>\r\n          </section>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"addBtn\">\r\n          <button type=\"button\" onClick={() => setShow(true)}>Add Site ➕ </button>\r\n          <AddSite onClose={() => setShow(false)} show={show} />\r\n        </div>\r\n      \r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { ADD_ROSTER } from \"../../utils/mutations\";\r\nimport Auth from \"../../utils/auth\";\r\nimport \"./addRoster.css\"\r\n\r\nconst AddRoster = (props) => {\r\n  const [employeeCards, SetemployeeCards] = useState({reload:false})\r\n\r\n  \r\n    //===============================find managed employees ==============================//\r\n    // const { loading, error, data } = useQuery(QUERY_USER);\r\n  \r\n      \r\n    // if (loading) {\r\n    //   return <div>Loading...</div>;\r\n    // }\r\n  \r\n    // if (error) {\r\n    //   console.log(\"Error retrieving user data\", error.message);\r\n    // }\r\n  \r\n    // if (!data.user) {\r\n    //   console.log(\"please kill me\", data.user);\r\n    // }\r\n\r\n    // console.log(\"this is data.user\",data.user)\r\n    // ============================= add roster form ======================================///\r\n\r\n    const [addRoster, { error, data }] = useMutation(ADD_ROSTER);\r\n  const [addRosterFormdata, setAddRosterFormData] = useState({\r\n    dayDate: \"\",\r\n    siteName: \"\",\r\n    employees: \"\",\r\n    comments: \"\"\r\n    });\r\n\r\n//   console.log(\"this is data from use mutation\", data)\r\n\r\n  const handleSignChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setAddRosterFormData({ ...addRosterFormdata, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    console.log(\"start of handleformsubmit\", addRosterFormdata)\r\n    event.preventDefault();\r\n    try {\r\n      \r\n      const { data } = await addRoster({\r\n        variables: { ...addRosterFormdata }\r\n      });\r\n      console.log(\"this is data\", data);\r\n      //Change toke update\r\n      Auth.getToken(data.newRoster.token)\r\n      window.location.assign('/home')\r\n    } catch (e) {\r\n      console.log(\"there is an error with handleformsubmit\", e.message)\r\n      console.error(e);\r\n    }\r\n  };\r\n\r\n  if (!props.show) {\r\n    return null\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"addRosterModal\">\r\n      <div className=\"modalContent\">\r\n        <button className=\"modalClose\" onClick={props.onClose}>✖</button>\r\n        <h3 className=\"modalTitle\" id=\"signTitle\">\r\n          Add Roster\r\n        </h3>\r\n        {data ? (\r\n    <p>Roster Added to database </p>\r\n  ) : ( <div> \r\n         <form onSubmit={handleFormSubmit}>\r\n          <div className=\"signInputWrapper\">\r\n            <label htmlFor=\"dayDate\">Enter Date</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"modalInput\"\r\n              name=\"dayDate\"\r\n              placeholder=\"date\"\r\n              value={addRosterFormdata.dayDate}\r\n              onChange={handleSignChange}\r\n            />\r\n            <br />\r\n            \r\n            <label htmlFor=\"siteLocation\">Enter Site Name</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"modalInput\"\r\n              name=\"siteName\"\r\n              placeholder=\"Address\"\r\n              value={addRosterFormdata.siteName}\r\n              onChange={handleSignChange}\r\n            />\r\n\r\n            <label htmlFor=\"company\">Enter Employees</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"modalInput\"\r\n              id=\"employees\"\r\n              name=\"employees\"\r\n              placeholder=\"Company\"\r\n              value={addRosterFormdata.employees}\r\n              onChange={handleSignChange}\r\n            />\r\n            \r\n\r\n            <label htmlFor=\"siteContact\">Enter Coments</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"modalInput\"\r\n              name=\"comments\"\r\n              placeholder=\"Comments\"\r\n              value={addRosterFormdata.comments}\r\n              onChange={handleSignChange}\r\n            />\r\n\r\n          </div>\r\n          \r\n\r\n          \r\n          <button type=\"submit\" className=\"modalSubmit\" id=\"signSubmit\">\r\n          Add New Roster\r\n        </button>\r\n    \r\n        </form>\r\n    \r\n\r\n\r\n      </div>\r\n        )}{error && (\r\n          <div className=\"my-3 p-3 bg-danger text-white\">\r\n            {error.message}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"bckBlur\"></div>\r\n    </div>\r\n);\r\n};\r\n\r\nexport default AddRoster;","import React from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { QUERY_ROSTER } from \"../../utils/queries\";\r\nimport \"./rosterStyles.css\";\r\nimport Auth from \"../../utils/auth\";\r\nimport \"./rosterStyles.css\"\r\nimport AddRoster from \"../addRosterModal/AddRoster\";\r\n\r\nexport default function Roster() {\r\n  const [show, setShow] = React.useState(false);\r\n  const userID = Auth.getProfile().data._id;\r\n\r\n  // console.log(\"this is manager.......\", userID)\r\n  const { loading, error, data } = useQuery(QUERY_ROSTER, {\r\n    variables: { rostersManager: userID },\r\n  });\r\n\r\n  console.log(\"this is data........\", data);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    console.log(\"Error retrieving user data\", error.message);\r\n  }\r\n\r\n  if (!data.rosters) {\r\n    console.log(\"please kill me\", data.rosters);\r\n  } else if (data.rosters) {\r\n    console.log(data.rosters)\r\n    return (\r\n      <div>\r\n        <div className=\"rosterWrap\">\r\n          {data.rosters.map((roster) => (\r\n            <section className=\"rosterCard\" key={roster._id}>\r\n              <h1 className=\"rosterTitle\"> Roster for {roster.dayDate} </h1>\r\n              <div className=\"rosterInfo\"  key={roster.comments}>\r\n                <h4> Site: {roster.siteName.siteName}</h4>\r\n                <h4> Rostered Staff:</h4>\r\n                {roster.employees.map((emp) => (\r\n                  <p>{emp.empName} </p>\r\n                ))}\r\n\r\n                <h4> Manger Comments: </h4>\r\n                <p>{roster.comments}</p>\r\n              </div>\r\n            </section>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"addBtn\">\r\n          <button type=\"button\" onClick={() => setShow(true)}>Add Roster ➕ </button>\r\n          <AddRoster onClose={() => setShow(false)} show={show} />\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./styles.css\";\r\nimport Employee from \"../../components/employees/Employee\";\r\nimport Sites from \"../../components/sites/Sites\";\r\nimport Auth from \"../../utils/auth\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Roster from \"../../components/roster/Roster\";\r\n\r\n\r\nexport default function Home() {\r\n  const logout = (event) => {\r\n    event.preventDefault();\r\n    Auth.logout();\r\n  };\r\n  let [employee, setShowE] = useState(false);\r\n  let [roster, setShowR] = useState(true);\r\n  let [site, setShowS] = useState(false);\r\n \r\n  function showComponent(compName) {\r\n    console.log(compName);\r\n    switch (compName) {\r\n      case \"falseemployee\":\r\n        employee = setShowE(true);\r\n        roster = setShowR(false);\r\n        site = setShowS(false);\r\n        console.log(employee)\r\n        break;\r\n      case \"falsesite\":\r\n        employee = setShowE(false);\r\n        roster = setShowR(false);\r\n        site = setShowS(true);\r\n        break;\r\n      case \"falseroster\":\r\n        employee = setShowE(false);\r\n        roster = setShowR(true);\r\n        site = setShowS(false);\r\n        break;\r\n        default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  if (Auth.loggedIn() === false) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"homePageNav\">\r\n        <h1 id=\"homeTitle\">\r\n          SiteMate\r\n          <span>\r\n            <i className=\"fas fa-hard-hat\"></i>\r\n          </span>\r\n        </h1>\r\n\r\n        <ul id=\"navList\">\r\n          <li>\r\n            <a onClick={() => showComponent(roster + \"roster\")}>Rosters</a>\r\n          </li>\r\n          <li>\r\n            <a onClick={() => showComponent(site + \"site\")}>Sites</a>\r\n          </li>\r\n          <li>\r\n            <a onClick={() => showComponent(employee + \"employee\")}>Employees</a>\r\n          </li>\r\n          <li>\r\n            <a onClick={logout}>Logout</a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n\r\n      <div className=\"pageBackground\"></div>\r\n\r\n      {employee && <Employee />}\r\n\r\n      {site && <Sites />}\r\n\r\n      {roster && <Roster />}\r\n\r\n     \r\n\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { onError } from 'apollo-link-error';\nimport { ApolloLink } from 'apollo-link';\n\nimport Landing from './pages/LandingPage/Landing';\nimport Home from './pages/HomePage/Home';\n\n\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\n  if (graphQLErrors) {\n    console.log('graphQLErrors', graphQLErrors);\n  }\n  if (networkError) {\n    console.log('networkError', networkError);\n  }\n});\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst link = ApolloLink.from([errorLink, httpLink]);\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  console.log(\"this is the headers bro\", headers)\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n             <Route exact path=\"/\">\n              <Landing />\n            </Route>\n            {/* <Route exact path=\"/signup\">\n              <SignUp />\n            </Route> */}\n            <Route exact path=\"/home\">\n              <Home />\n            </Route>\n            {/* <Route exact path=\"/employees\">\n              <Employees />\n            </Route>\n            <Route exact path=\"/sites\">\n              <Sites />\n            </Route>\n            <Route exact path=\"/Roster\">\n              <Roster />\n              </Route>\n            <Route exact path=\"/employeeRoster\">\n              <employeeRoster />\n            </Route> */}\n        </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}